House Robber 1 Leetcode : https://leetcode.com/problems/house-robber/description/

Approach-1 Recursive TLE

class Solution {
    public int rob(int[] nums) {
        return robHelper(nums, nums.length-1);
    }
    private int robHelper(int[] nums, int n){
        if(n < 0)
           return 0;
        return Math.max(robHelper(nums, n-1), nums[n] + robHelper(nums, n-2));
    }
}
Time complexity : O(2^n)
Space : O(n) recusrion stack

Approach-2 Memoized 

class Solution {
    int[] dp = new int[101];
    public int rob(int[] nums) {
        Arrays.fill(dp, -1);
        return robHelper(nums, nums.length-1);
    }
    private int robHelper(int[] nums, int n){
        if(n < 0)
           return 0;
        if(dp[n] != -1)
           return dp[n];
        return dp[n] = Math.max(robHelper(nums, n-1), nums[n] + robHelper(nums, n-2));
    }
}

Time complexity : O(n)
Space : O(n) for dp array
